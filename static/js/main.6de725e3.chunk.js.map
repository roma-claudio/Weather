{"version":3,"sources":["Component.js","Search.js","Map.js","Result.js","serviceWorker.js","index.js"],"names":["SearchBox","props","getSelectedElement","selectedOption","document","getElementById","children","option","classList","contains","cityName","dataset","coordinates","lat","coordinatesLat","long","coordinatesLong","onChange","e","input","currentTarget","value","fetch","then","result","json","places","distance","results","forEach","r","category","push","title","position","setState","selected","suggestions","show","onClick","event","suggestion","history","onKeyDown","keyCode","state","length","target","location","href","selectedCoordinates","SuggestionsHtml","this","index","data-coordinates-lat","data-coordinates-long","className","ev","key","size","type","placeholder","aria-label","id","Component","withRouter","Search","Map","stats","start","end","executionTime","generatedTime","source","console","log","createGraph","pathname","replace","split","response","meta","Chart","defaults","global","legend","display","averageTemperatureChartElement","maxTemperatureChartElement","minTemperatureChartElement","precipitationChartElement","gradientAvT","getContext","createLinearGradient","addColorStop","gradientMaxT","gradientMinT","data","labels","datasets","label","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","backgroundColor","tavg","fill","options","scales","yAxes","ticks","gridLines","drawBorder","xAxes","layout","padding","left","borderColor","tmax","tmin","prcp","decodeURIComponent","Date","now","role","Result","Boolean","window","hostname","match","ReactDOM","render","StrictMode","exact","strict","path","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6de725e3.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass SearchBox extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            suggestions: [],\r\n            coordinates: [],\r\n            show: false,\r\n            input: \"\",\r\n            selectedCoordinates: null\r\n        }\r\n    }\r\n\r\n    getSelectedElement = () => {\r\n        let selectedOption;\r\n        for (let option of document.getElementById(\"result-list\").children) {\r\n            if (option.classList.contains(\"selected\")) {\r\n                selectedOption = option;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return ({\r\n            cityName: selectedOption.dataset.cityName,\r\n            coordinates: {\r\n                lat: selectedOption.dataset.coordinatesLat,\r\n                long: selectedOption.dataset.coordinatesLong\r\n            }\r\n        });\r\n    }\r\n\r\n    onChange = e => {\r\n        const input = e.currentTarget.value;\r\n        fetch(\"https://nodejs-295719.ew.r.appspot.com/city?\"+input)\r\n        .then( result => result.json() )\r\n        .then( (result) => {\r\n            let places = [];\r\n            let distance = [];\r\n            let coordinates = [];\r\n            result.results.forEach((r) => {\r\n                if (r.category !== \"street-square\") {\r\n                   places.push(r.title)\r\n                   distance.push(r.distance);\r\n                   coordinates.push(r.position) \r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                selected: -1,\r\n                suggestions: places,\r\n                show: true,\r\n                input: input,\r\n                coordinates: coordinates\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    onClick = (event,suggestion,lat,long) => {\r\n        this.props.history.push(\"/\"+suggestion+\"&\"+lat+\"&\"+long);\r\n        return;\r\n    }\r\n\r\n    onKeyDown = e => {\r\n        //Arrow down\r\n        if (e.keyCode === 40) {\r\n            if ( (this.state.suggestions.length - 1) === this.state.selected) return;\r\n            e.target.value = this.state.suggestions[this.state.selected + 1];\r\n            this.setState({\r\n                selected: this.state.selected + 1,\r\n                show: false,\r\n                input: this.state.suggestions[this.state.selected + 1],\r\n            })\r\n            return;\r\n        }\r\n\r\n        //Arrow up\r\n        if (e.keyCode === 38) {\r\n            if (this.state.selected === 0 ) return;\r\n            e.target.value = this.state.suggestions[this.state.selected - 1];\r\n            this.setState({\r\n                selected: this.state.selected - 1,\r\n                show: false,\r\n                input: this.state.suggestions[this.state.selected - 1],\r\n            })\r\n            return;\r\n        }\r\n\r\n        //Enter\r\n        if (e.keyCode === 13) {\r\n            this.props.history.push(document.location.href+this.state.suggestions[this.state.selected]+\"&\"+this.state.coordinates[this.state.selected][0]+\"&\"+this.state.coordinates[this.state.selected][1]);\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let SuggestionsHtml = []\r\n        \r\n        this.state.suggestions.forEach((suggestion, index) => {\r\n            SuggestionsHtml.push(\r\n                <li \r\n                    data-coordinates-lat={this.state.coordinates[index][0]}\r\n                    data-coordinates-long={this.state.coordinates[index][1]}\r\n                    className={ suggestion === this.state.input ? \"list-group-item selected\" : \"list-group-item\"}\r\n                    onClick={(ev) => this.onClick(ev,suggestion, this.state.coordinates[index][0], this.state.coordinates[index][1])}\r\n                    key={suggestion+index}\r\n                    >\r\n                        {suggestion}\r\n                </li>\r\n            );        \r\n        })\r\n       \r\n        return(\r\n            <Fragment>\r\n                <input className={this.props.size === \"tiny\" ? \"form-control transparent tiny\" : \"form-control transparent\"} type=\"text\" placeholder=\"City\" aria-label=\"City\" onChange={this.onChange} onKeyDown={this.onKeyDown}/>\r\n                <ul id=\"result-list\" className={this.props.size === 'tiny' ? \"list-group position-absolute tiny\": \"list-group position-absolute\"}>\r\n                    {SuggestionsHtml}\r\n                </ul>\r\n            </Fragment>\r\n           \r\n        )\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(SearchBox);","import React, { Fragment } from 'react';\nimport SearchBox from './Component';\nimport './App.css';\n\nfunction Search() {\n  return (\n    <Fragment>\n      <div className=\"bg-image\">\n        <div className=\"container h-100 z-1\">\n          <div className=\"row align-items-center h-100\">\n            <div className=\"col-10 mx-auto\">\n              <SearchBox/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Search;\n","import React, { Component, Fragment } from 'react';\r\nimport SearchBox from './Component';\r\nimport Chart from \"chart.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Map extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stats: {\r\n        start: \"\",\r\n        end: \"\",\r\n        executionTime: \"\",\r\n        generatedTime: \"\",\r\n        source: \"\"\r\n      }\r\n    }    \r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"ComponentWillUnmount()\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"ComponentDidMount()\");\r\n    this.createGraph();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.createGraph();\r\n    console.log(\"componentDidUpdate()\");\r\n  }\r\n\r\n  getSnapshotBeforeUpdate() {\r\n    //this.createGraph();\r\n    return true;\r\n  }\r\n\r\n  createGraph() {\r\n    //let coordinates = document.location.pathname.replace(\"/\",\"\").split(\"&\");\r\n    let lat = document.location.pathname.replace(\"/\",\"\").split(\"&\")[1];\r\n    let long = document.location.pathname.replace(\"/\",\"\").split(\"&\")[2];\r\n    \r\n    fetch(\"https://nodejs-295719.ew.r.appspot.com/stats?lat=\"+lat+\"&long=\"+long)\r\n    .then( response => response.json())\r\n    .then( (response) => {\r\n\r\n        console.log(response.meta);\r\n\r\n        /*\r\n        this.setState({\r\n          stats: {\r\n            start: response.meta.start,\r\n            end: response.meta.end,\r\n            executionTime: response.meta.exec_time,\r\n            generatedTime: response.meta.generated,\r\n            source: response.meta.source\r\n          }\r\n        });\r\n        */\r\n        \r\n\r\n        //Remove the label from the chart\r\n        Chart.defaults.global.legend.display = false;\r\n        \r\n        var averageTemperatureChartElement = document.getElementById('averageTemperatureChart');\r\n        var maxTemperatureChartElement = document.getElementById('maxTemperatureChart');\r\n        var minTemperatureChartElement = document.getElementById('minTemperatureChart');\r\n        var precipitationChartElement = document.getElementById('precipitationChart');\r\n\r\n        /*** Gradient ***/\r\n\r\n        var ctxAvT = averageTemperatureChartElement.getContext(\"2d\"); \r\n        var gradientAvT = ctxAvT.createLinearGradient(0, 0, 0, 150);\r\n        gradientAvT.addColorStop(0, 'rgba(250,174,50,1)');   \r\n        gradientAvT.addColorStop(1, 'rgba(250,174,50,0)');\r\n\r\n        var ctxMaxT = maxTemperatureChartElement.getContext(\"2d\"); \r\n        var gradientMaxT = ctxMaxT.createLinearGradient(0, 0, 0, 150);\r\n        gradientMaxT.addColorStop(0, 'rgba(249,107,46,1)');   \r\n        gradientMaxT.addColorStop(1, 'rgba(250,174,50,0.45)');\r\n\r\n        var ctxMinT = minTemperatureChartElement.getContext(\"2d\"); \r\n        var gradientMinT = ctxMinT.createLinearGradient(0, 0, 0, 300);\r\n        gradientMinT.addColorStop(0, 'rgba(50,178,250,1)');   \r\n        gradientMinT.addColorStop(1, 'rgba(185,46,249,0.1)');\r\n\r\n        new Chart(averageTemperatureChartElement, {\r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n                datasets: [\r\n                    {\r\n                      label: \"Average Temperature\",\r\n                      fillColor : gradientAvT,\r\n                      strokeColor : \"#ff6c23\",\r\n                      pointColor : \"#fff\",\r\n                      pointStrokeColor : \"#ff6c23\",\r\n                      pointHighlightFill: \"#fff\",\r\n                      pointHighlightStroke: \"#ff6c23\",\r\n                      backgroundColor: gradientAvT,\r\n                      data: [\r\n                          response.data[0].tavg, \r\n                          response.data[1].tavg, \r\n                          response.data[2].tavg, \r\n                          response.data[3].tavg,\r\n                          response.data[4].tavg, \r\n                          response.data[5].tavg, \r\n                          response.data[6].tavg, \r\n                          response.data[7].tavg,\r\n                          response.data[8].tavg, \r\n                          response.data[9].tavg, \r\n                          response.data[10].tavg, \r\n                          response.data[11].tavg\r\n                      ],\r\n                      fill: 'start'\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      display: true //this will remove only the label\r\n                    },\r\n                    gridLines: {\r\n                      drawBorder: false\r\n                    }\r\n                  }\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    gridLines: {\r\n                      drawBorder: false\r\n                    }\r\n                  }\r\n                ]\r\n              },\r\n              layout: {\r\n                padding: {\r\n                    left: -5,\r\n                }\r\n              } \r\n            }\r\n        });\r\n\r\n        new Chart(maxTemperatureChartElement, {\r\n          type: \"line\",\r\n          data: {\r\n              //Bring in data\r\n              labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n              datasets: [\r\n                  {\r\n                      label: \"Average Max Temperature\",\r\n                      fillColor : gradientMaxT,\r\n                      strokeColor : \"#ff6c23\",\r\n                      pointColor : \"#fff\",\r\n                      pointStrokeColor : \"#ff6c23\",\r\n                      pointHighlightFill: \"#fff\",\r\n                      pointHighlightStroke: \"#ff6c23\",\r\n                      backgroundColor: gradientMaxT,\r\n                      borderColor: gradientMaxT,\r\n                      data: [\r\n                          response.data[0].tmax, \r\n                          response.data[1].tmax, \r\n                          response.data[2].tmax, \r\n                          response.data[3].tmax,\r\n                          response.data[4].tmax, \r\n                          response.data[5].tmax, \r\n                          response.data[6].tmax, \r\n                          response.data[7].tmax,\r\n                          response.data[8].tmax, \r\n                          response.data[9].tmax, \r\n                          response.data[10].tmax, \r\n                          response.data[11].tmax\r\n                      ],\r\n                      fill: false\r\n                  }\r\n              ]\r\n          },\r\n          options: {\r\n            layout: {\r\n              padding: {\r\n                  left: -5,\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        new Chart(minTemperatureChartElement, {\r\n          type: \"line\",\r\n          data: {\r\n              //Bring in data\r\n              labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n              datasets: [\r\n                  {\r\n                    label: \"Average Min Temperature\",\r\n                    fillColor : gradientMinT,\r\n                    strokeColor : \"#ff6c23\",\r\n                    pointColor : \"#fff\",\r\n                    pointStrokeColor : \"#ff6c23\",\r\n                    pointHighlightFill: \"#fff\",\r\n                    pointHighlightStroke: \"#ff6c23\",\r\n                    backgroundColor: gradientMinT,\r\n                    borderColor: gradientMinT,\r\n                      data: [\r\n                          response.data[0].tmin, \r\n                          response.data[1].tmin, \r\n                          response.data[2].tmin, \r\n                          response.data[3].tmin,\r\n                          response.data[4].tmin, \r\n                          response.data[5].tmin, \r\n                          response.data[6].tmin, \r\n                          response.data[7].tmin,\r\n                          response.data[8].tmin, \r\n                          response.data[9].tmin, \r\n                          response.data[10].tmin, \r\n                          response.data[11].tmin\r\n                      ],\r\n                      fill: false\r\n                  }\r\n              ],\r\n\r\n          },\r\n          options: {\r\n            layout: {\r\n              padding: {\r\n                  left: -5,\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        new Chart(precipitationChartElement, {\r\n          type: \"bar\",\r\n          data: {\r\n              //Bring in data\r\n              labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n              datasets: [\r\n                  {\r\n                      label: \"Average precipitation\",\r\n                      borderColor: 'rgba(75, 192, 192, 1)',\r\n                      backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                      data: [\r\n                          response.data[0].prcp, \r\n                          response.data[1].prcp, \r\n                          response.data[2].prcp, \r\n                          response.data[3].prcp,\r\n                          response.data[4].prcp, \r\n                          response.data[5].prcp, \r\n                          response.data[6].prcp, \r\n                          response.data[7].prcp,\r\n                          response.data[8].prcp, \r\n                          response.data[9].prcp, \r\n                          response.data[10].prcp, \r\n                          response.data[11].prcp\r\n                      ]\r\n                  }\r\n              ]\r\n          },\r\n          options: {\r\n            layout: {\r\n              padding: {\r\n                  left: -5,\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    console.log(\"Component is rendering\\n\");\r\n    let cityName= decodeURIComponent(document.location.pathname.replace(\"/\",\"\").split(\"&\")[0]);\r\n    let lat = document.location.pathname.replace(\"/\",\"\").split(\"&\")[1];\r\n    let long = document.location.pathname.replace(\"/\",\"\").split(\"&\")[2];\r\n    return (\r\n          <Fragment>            \r\n            <div className=\"row align-items-center h-100\" key={Date.now()}>\r\n              <div className=\"col-8 mx-auto card chart-card border-0\">\r\n                <div className=\"card-body p-2 pb-0\">\r\n                  <p className=\"align-self-end float-right\">\r\n                    <SearchBox size=\"tiny\"/>\r\n                  </p>\r\n                  <p className=\"display-3 align-self-end compensate-left\">\r\n                    {cityName}\r\n                  </p>\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <p className=\"align-self-end pb-2\">{lat}° {long}°</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"classic-tabs p-2\">\r\n                  <div className=\"tab-content rounded-bottom\">\r\n                    <p className=\"display-5 text-muted align-self-end\">Average Temperature</p>\r\n                    <div className=\"tab-pane fade in show active\" id=\"panel1001\" role=\"tabpanel\">\r\n                      <canvas id=\"averageTemperatureChart\"/>\r\n                    </div>\r\n                    <p className=\"display-5 text-muted align-self-end mt-5\">Max Temperature</p>\r\n                    <div className=\"tab-pane fade in show active\" id=\"panel1002\" role=\"tabpanel\">\r\n                      <canvas id=\"maxTemperatureChart\" />\r\n                    </div>\r\n                    <p className=\"display-5 text-muted align-self-end mt-5\">Min Temperature</p>\r\n                    <div className=\"tab-pane fade in show active\" id=\"panel1003\" role=\"tabpanel\">\r\n                      <canvas id=\"minTemperatureChart\" />\r\n                    </div>\r\n                    <p className=\"display-5 text-muted align-self-end mt-5\">Average Precipitations</p>\r\n                    <div className=\"tab-pane fade in show active\" id=\"panel1004\" role=\"tabpanel\">\r\n                      <canvas id=\"precipitationChart\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n      );\r\n  }\r\n  \r\n\r\n  \r\n}\r\n\r\nexport default withRouter(Map);\r\n","import React from 'react';\nimport Map from './Map.js';\n\nfunction Result (props) {\n  console.log('test1');\n  console.log(document.location.pathname);\n  return (\n    <div className=\"container h-100\">\n      <Map cityName={decodeURIComponent(document.location.pathname.replace(\"/\",\"\").split(\"&\")[0])} lat={document.location.pathname.replace(\"/\",\"\").split(\"&\")[1]} long={document.location.pathname.replace(\"/\",\"\").split(\"&\")[2]} />\n    </div>\n  );\n  \n}\n\nexport default Result;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport './index.css';\nimport Search from './Search.js';\nimport Result from './Result';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact strict path=\"/weather/(.*.{1,})\">\n          <Result/> \n        </Route>\n        <Route>\n          <Search/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}