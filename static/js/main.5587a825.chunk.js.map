{"version":3,"sources":["SearchBox.js","Search.js","Data.js","Previous.js","Result.js","index.js"],"names":["SearchBox","props","getSelectedElement","selectedOption","document","getElementById","children","option","classList","contains","cityName","dataset","coordinates","lat","coordinatesLat","long","coordinatesLong","onChange","e","input","currentTarget","value","fetch","then","result","json","places","distance","results","forEach","r","category","push","title","position","setState","selected","suggestions","show","onClick","event","suggestion","history","onKeyDown","keyCode","scrollToSelected","elementId","childNodes","isInViewport","scrollIntoView","element","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","state","selectedCoordinates","this","SuggestionsHtml","index","data-coordinates-lat","data-coordinates-long","className","ev","key","id","size","type","placeholder","aria-label","Component","withRouter","Search","Data","stats","start","end","executionTime","generatedTime","source","createGraph","location","pathname","replace","split","response","Chart","defaults","global","legend","display","averageTemperatureChartElement","maxTemperatureChartElement","minTemperatureChartElement","precipitationChartElement","gradientAvT","getContext","createLinearGradient","addColorStop","gradientMaxT","gradientMinT","data","labels","datasets","label","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","backgroundColor","tavg","fill","options","scales","yAxes","ticks","gridLines","drawBorder","xAxes","layout","padding","borderColor","tmax","tmin","prcp","decodeURIComponent","Date","now","role","Previous","Result","ReactDOM","render","StrictMode","exact","strict","path"],"mappings":"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","file":"static/js/main.5587a825.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass SearchBox extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            suggestions: [],\r\n            coordinates: [],\r\n            show: false,\r\n            input: \"\",\r\n            selectedCoordinates: null\r\n        }\r\n    }\r\n\r\n    getSelectedElement = () => {\r\n        let selectedOption;\r\n        for (let option of document.getElementById(\"result-list\").children) {\r\n            if (option.classList.contains(\"selected\")) {\r\n                selectedOption = option;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return ({\r\n            cityName: selectedOption.dataset.cityName,\r\n            coordinates: {\r\n                lat: selectedOption.dataset.coordinatesLat,\r\n                long: selectedOption.dataset.coordinatesLong\r\n            }\r\n        });\r\n    }\r\n\r\n    onChange = e => {\r\n        const input = e.currentTarget.value;\r\n        fetch(\"https://nodejs-295719.ew.r.appspot.com/city?\"+input)\r\n        .then( result => result.json() )\r\n        .then( (result) => {\r\n            let places = [];\r\n            let distance = [];\r\n            let coordinates = [];\r\n            result.results.forEach((r) => {\r\n                if (r.category !== \"street-square\") {\r\n                   places.push(r.title)\r\n                   distance.push(r.distance);\r\n                   coordinates.push(r.position) \r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                selected: -1,\r\n                suggestions: places,\r\n                show: true,\r\n                input: input,\r\n                coordinates: coordinates\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    onClick = (event,suggestion,lat,long) => {\r\n        this.props.history.push(\"/Weather/\"+suggestion+\"&\"+lat+\"&\"+long);\r\n        return;\r\n    }\r\n\r\n    onKeyDown = e => {\r\n        //Arrow down\r\n        if (e.keyCode === 40) {\r\n            /*\r\n            if ( (this.state.suggestions.length - 1) === this.state.selected) return;\r\n            e.target.value = this.state.suggestions[this.state.selected + 1];\r\n            this.setState({\r\n                selected: this.state.selected + 1,\r\n                show: false,\r\n                input: this.state.suggestions[this.state.selected + 1],\r\n            })\r\n            */\r\n            return;\r\n        }\r\n\r\n        //Arrow up\r\n        if (e.keyCode === 38) {\r\n            /*\r\n            if (this.state.selected === 0 ) return;\r\n            e.target.value = this.state.suggestions[this.state.selected - 1];\r\n            this.setState({\r\n                selected: this.state.selected - 1,\r\n                show: false,\r\n                input: this.state.suggestions[this.state.selected - 1],\r\n            })\r\n            */\r\n            return;\r\n        }\r\n\r\n        //Enter\r\n        if (e.keyCode === 13) {\r\n            /*\r\n            this.props.history.push(document.location.pathname+\"/\"+this.state.suggestions[this.state.selected]+\"&\"+this.state.coordinates[this.state.selected][0]+\"&\"+this.state.coordinates[this.state.selected][1]);\r\n            return;\r\n            */\r\n        }\r\n    }\r\n\r\n    scrollToSelected = elementId => {\r\n        document.getElementById(elementId).childNodes.forEach( (e) =>  {\r\n            if (e.classList.contains('selected') && !this.isInViewport(e)) e.scrollIntoView(true);\r\n        });\r\n        \r\n    }\r\n\r\n    isInViewport = element => {\r\n        const rect = element.getBoundingClientRect();\r\n        return (\r\n            rect.top >= 0 &&\r\n            rect.left >= 0 &&\r\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToSelected('result-list');\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let SuggestionsHtml = []\r\n        \r\n        this.state.suggestions.forEach((suggestion, index) => {\r\n            SuggestionsHtml.push(\r\n                <li \r\n                    data-coordinates-lat={this.state.coordinates[index][0]}\r\n                    data-coordinates-long={this.state.coordinates[index][1]}\r\n                    className={ suggestion === this.state.input ? \"list-group-item selected\" : \"list-group-item\"}\r\n                    onClick={(ev) => this.onClick(ev,suggestion, this.state.coordinates[index][0], this.state.coordinates[index][1])}\r\n                    key={suggestion+index}\r\n                    >\r\n                        {suggestion}\r\n                </li>\r\n            );        \r\n        })\r\n       \r\n        return(\r\n            <Fragment>\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text rounded-0\" id=\"basic-addon1\">\r\n                            <i className=\"fas fa-search fa-xs\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <input className={this.props.size === \"tiny\" ? \"form-control rounded-0 tiny\" : \"form-control rounded-0\"} type=\"text\" placeholder=\"City\" aria-label=\"City\" onChange={this.onChange} onKeyDown={this.onKeyDown}/>\r\n                </div>\r\n                <ul id=\"result-list\" className={this.props.size === 'tiny' ? \"list-group position-absolute rounded-0 tiny\": \"list-group rounded-0 position-absolute\"}>\r\n                    {SuggestionsHtml}\r\n                </ul>\r\n            </Fragment>\r\n        )\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(SearchBox);","import React, { Fragment } from 'react';\nimport SearchBox from './SearchBox';\nimport './App.css';\n\nfunction Search() {\n  return (\n    <Fragment>\n      <div className=\"bg-image\"></div>\n      <div className=\"container h-100\">\n        <div className=\"row align-items-center h-90\">\n          <div className=\"col-10 mx-auto\">\n            <p className=\"h2 text-center text-white\"><strong>Check how the weather looks like<br/>in the rest of the world</strong></p>\n            <p className=\"lead text-center text-white mb-5\">This is a collection of data about temperatures and precipitations, that has been<br/>recorded in the last 30 years, around the world.</p>\n            <SearchBox/>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Search;\n","import React, { Component, Fragment } from 'react';\r\nimport Chart from \"chart.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Data extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stats: {\r\n        start: \"\",\r\n        end: \"\",\r\n        executionTime: \"\",\r\n        generatedTime: \"\",\r\n        source: \"\"\r\n      }\r\n    }    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createGraph();\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.createGraph();\r\n    \r\n  }\r\n\r\n  getSnapshotBeforeUpdate() {\r\n    //this.createGraph();\r\n    return true;\r\n  }\r\n\r\n  createGraph() {\r\n    //let coordinates = document.location.pathname.replace(\"/\",\"\").split(\"&\");\r\n    let lat = document.location.pathname.replace(\"/\",\"\").split(\"&\")[1];\r\n    let long = document.location.pathname.replace(\"/\",\"\").split(\"&\")[2];\r\n    \r\n    fetch(\"https://nodejs-295719.ew.r.appspot.com/stats?lat=\"+lat+\"&long=\"+long)\r\n    .then( response => response.json())\r\n    .then( (response) => {\r\n\r\n        //Remove the label from the chart\r\n        Chart.defaults.global.legend.display = false;\r\n        \r\n        var averageTemperatureChartElement = document.getElementById('averageTemperatureChart');\r\n        var maxTemperatureChartElement = document.getElementById('maxTemperatureChart');\r\n        var minTemperatureChartElement = document.getElementById('minTemperatureChart');\r\n        var precipitationChartElement = document.getElementById('precipitationChart');\r\n\r\n        /*** Gradient ***/\r\n\r\n        var ctxAvT = averageTemperatureChartElement.getContext(\"2d\"); \r\n        var gradientAvT = ctxAvT.createLinearGradient(0, 0, 0, 150);\r\n        gradientAvT.addColorStop(0, 'rgba(250,174,50,1)');   \r\n        gradientAvT.addColorStop(1, 'rgba(250,174,50,0)');\r\n\r\n        var ctxMaxT = maxTemperatureChartElement.getContext(\"2d\"); \r\n        var gradientMaxT = ctxMaxT.createLinearGradient(0, 0, 0, 150);\r\n        gradientMaxT.addColorStop(0, 'rgba(249,107,46,1)');   \r\n        gradientMaxT.addColorStop(1, 'rgba(250,174,50,0.45)');\r\n\r\n        var ctxMinT = minTemperatureChartElement.getContext(\"2d\"); \r\n        var gradientMinT = ctxMinT.createLinearGradient(0, 0, 0, 300);\r\n        gradientMinT.addColorStop(0, 'rgba(50,178,250,1)');   \r\n        gradientMinT.addColorStop(1, 'rgba(185,46,249,0.1)');\r\n\r\n        new Chart(averageTemperatureChartElement, {\r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n                datasets: [\r\n                    {\r\n                      label: \"Average Temperature\",\r\n                      fillColor : gradientAvT,\r\n                      strokeColor : \"#ff6c23\",\r\n                      pointColor : \"#fff\",\r\n                      pointStrokeColor : \"#ff6c23\",\r\n                      pointHighlightFill: \"#fff\",\r\n                      pointHighlightStroke: \"#ff6c23\",\r\n                      backgroundColor: gradientAvT,\r\n                      data: [\r\n                          response.data[0].tavg, \r\n                          response.data[1].tavg, \r\n                          response.data[2].tavg, \r\n                          response.data[3].tavg,\r\n                          response.data[4].tavg, \r\n                          response.data[5].tavg, \r\n                          response.data[6].tavg, \r\n                          response.data[7].tavg,\r\n                          response.data[8].tavg, \r\n                          response.data[9].tavg, \r\n                          response.data[10].tavg, \r\n                          response.data[11].tavg\r\n                      ],\r\n                      fill: 'start'\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      display: true //this will remove only the label\r\n                    },\r\n                    gridLines: {\r\n                      drawBorder: false\r\n                    }\r\n                  }\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    gridLines: {\r\n                      drawBorder: false\r\n                    }\r\n                  }\r\n                ]\r\n              },\r\n              layout: {\r\n                padding: {\r\n                    left: -5,\r\n                }\r\n              } \r\n            }\r\n        });\r\n\r\n        new Chart(maxTemperatureChartElement, {\r\n          type: \"line\",\r\n          data: {\r\n              //Bring in data\r\n              labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n              datasets: [\r\n                  {\r\n                      label: \"Average Max Temperature\",\r\n                      fillColor : gradientMaxT,\r\n                      strokeColor : \"#ff6c23\",\r\n                      pointColor : \"#fff\",\r\n                      pointStrokeColor : \"#ff6c23\",\r\n                      pointHighlightFill: \"#fff\",\r\n                      pointHighlightStroke: \"#ff6c23\",\r\n                      backgroundColor: gradientMaxT,\r\n                      borderColor: gradientMaxT,\r\n                      data: [\r\n                          response.data[0].tmax, \r\n                          response.data[1].tmax, \r\n                          response.data[2].tmax, \r\n                          response.data[3].tmax,\r\n                          response.data[4].tmax, \r\n                          response.data[5].tmax, \r\n                          response.data[6].tmax, \r\n                          response.data[7].tmax,\r\n                          response.data[8].tmax, \r\n                          response.data[9].tmax, \r\n                          response.data[10].tmax, \r\n                          response.data[11].tmax\r\n                      ],\r\n                      fill: false\r\n                  }\r\n              ]\r\n          },\r\n          options: {\r\n            layout: {\r\n              padding: {\r\n                  left: -5,\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        new Chart(minTemperatureChartElement, {\r\n          type: \"line\",\r\n          data: {\r\n              //Bring in data\r\n              labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n              datasets: [\r\n                  {\r\n                    label: \"Average Min Temperature\",\r\n                    fillColor : gradientMinT,\r\n                    strokeColor : \"#ff6c23\",\r\n                    pointColor : \"#fff\",\r\n                    pointStrokeColor : \"#ff6c23\",\r\n                    pointHighlightFill: \"#fff\",\r\n                    pointHighlightStroke: \"#ff6c23\",\r\n                    backgroundColor: gradientMinT,\r\n                    borderColor: gradientMinT,\r\n                      data: [\r\n                          response.data[0].tmin, \r\n                          response.data[1].tmin, \r\n                          response.data[2].tmin, \r\n                          response.data[3].tmin,\r\n                          response.data[4].tmin, \r\n                          response.data[5].tmin, \r\n                          response.data[6].tmin, \r\n                          response.data[7].tmin,\r\n                          response.data[8].tmin, \r\n                          response.data[9].tmin, \r\n                          response.data[10].tmin, \r\n                          response.data[11].tmin\r\n                      ],\r\n                      fill: false\r\n                  }\r\n              ],\r\n\r\n          },\r\n          options: {\r\n            layout: {\r\n              padding: {\r\n                  left: -5,\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        new Chart(precipitationChartElement, {\r\n          type: \"bar\",\r\n          data: {\r\n              //Bring in data\r\n              labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n              datasets: [\r\n                  {\r\n                      label: \"Average precipitation\",\r\n                      borderColor: 'rgba(75, 192, 192, 1)',\r\n                      backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                      data: [\r\n                          response.data[0].prcp, \r\n                          response.data[1].prcp, \r\n                          response.data[2].prcp, \r\n                          response.data[3].prcp,\r\n                          response.data[4].prcp, \r\n                          response.data[5].prcp, \r\n                          response.data[6].prcp, \r\n                          response.data[7].prcp,\r\n                          response.data[8].prcp, \r\n                          response.data[9].prcp, \r\n                          response.data[10].prcp, \r\n                          response.data[11].prcp\r\n                      ]\r\n                  }\r\n              ]\r\n          },\r\n          options: {\r\n            layout: {\r\n              padding: {\r\n                  left: -5,\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    let cityName= decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0]);\r\n    let lat = document.location.pathname.replace(\"/\",\"\").split(\"&\")[1];\r\n    let long = document.location.pathname.replace(\"/\",\"\").split(\"&\")[2];\r\n    return (\r\n          <Fragment>\r\n            <div className=\"row align-items-center h-90\" key={Date.now()}>\r\n              <div className=\"col-9 mx-auto card border-0 chart-card\">\r\n                <div className=\"card-body p-2 pb-0\">\r\n                  <p className=\"display-3 align-self-end compensate-left\">\r\n                    {cityName}\r\n                  </p>\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <p className=\"align-self-end pb-2\">{lat}° {long}°</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"classic-tabs p-2\">\r\n                  <div className=\"tab-content rounded-bottom\">\r\n                    <p className=\"display-5 text-muted align-self-end\">Average Temperature</p>\r\n                    <div className=\"tab-pane fade in show active\" id=\"panel1001\" role=\"tabpanel\">\r\n                      <canvas id=\"averageTemperatureChart\"/>\r\n                    </div>\r\n                    <p className=\"display-5 text-muted align-self-end mt-5\">Max Temperature</p>\r\n                    <div className=\"tab-pane fade in show active\" id=\"panel1002\" role=\"tabpanel\">\r\n                      <canvas id=\"maxTemperatureChart\" />\r\n                    </div>\r\n                    <p className=\"display-5 text-muted align-self-end mt-5\">Min Temperature</p>\r\n                    <div className=\"tab-pane fade in show active\" id=\"panel1003\" role=\"tabpanel\">\r\n                      <canvas id=\"minTemperatureChart\" />\r\n                    </div>\r\n                    <p className=\"display-5 text-muted align-self-end mt-5\">Average Precipitations</p>\r\n                    <div className=\"tab-pane fade in show active\" id=\"panel1004\" role=\"tabpanel\">\r\n                      <canvas id=\"precipitationChart\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n      );\r\n  }\r\n  \r\n\r\n  \r\n}\r\n\r\nexport default withRouter(Data);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Previous extends Component {\r\n\r\n    onClick = () => {\r\n        this.props.history.push(\"/Weather\");\r\n        return;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row position-absolute mb-4 h-100\">\r\n                <div className=\"col mx-auto my-auto\">\r\n                    <i className=\"position-fixed fas fa-chevron-left fa-2x text-muted ml-4 previous-btn\" onClick={this.onClick}></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Previous);","import React, { Fragment } from 'react';\nimport Data from './Data.js';\nimport Previous from './Previous';\n\nfunction Result (props) {\n  return (\n    <Fragment>\n      <Previous/>\n      <div className=\"container h-100\">\n        <Data cityName={decodeURIComponent(document.location.pathname.replace(\"/\",\"\").split(\"&\")[0])} lat={document.location.pathname.replace(\"/\",\"\").split(\"&\")[1]} long={document.location.pathname.replace(\"/\",\"\").split(\"&\")[2]} />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Result;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport './index.css';\nimport Search from './Search.js';\nimport Result from './Result';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact strict path=\"/Weather/(.*.{1,})\">\n          <Result/> \n        </Route>\n        <Route>\n          <Search/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}