{"version":3,"sources":["SearchBox.js","Search.js","Precipitation.js","Temperature.js","Map.js","Dashboard.js","index.js"],"names":["SearchBox","props","getSelectedElement","selectedOption","document","getElementById","children","option","classList","contains","cityName","dataset","coordinates","lat","coordinatesLat","long","coordinatesLong","onChange","e","input","currentTarget","value","fetch","then","result","json","places","distance","results","forEach","r","category","push","title","position","setState","selected","suggestions","show","showSuggestions","overlay","booleanValue","state","onClick","event","suggestion","style","display","setTimeout","history","onKeyDown","keyCode","scrollToSelected","elementId","childNodes","isInViewport","scrollIntoView","element","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","selectedCoordinates","this","SuggestionsHtml","index","data-coordinates-lat","data-coordinates-long","className","ev","key","size","id","type","placeholder","aria-label","Component","withRouter","Search","precipitationChart","Precipitation","Object","keys","data","length","createGraph","destroy","Chart","defaults","global","legend","labels","datasets","label","borderColor","backgroundColor","options","layout","padding","scales","yAxes","ticks","beginAtZero","TemperatureWrapper","selectedTemperature","gradient","gradientLinearity","newTemperature","Temperature","querySelector","innerHTML","series","name","colors","chart","height","zoom","enabled","toolbar","dropShadow","enabledOnSeries","undefined","blur","color","opacity","dataLabels","stroke","curve","dashArray","grid","row","xaxis","categories","ApexCharts","render","Map","createMap","am4core","am4themes_frozen","am4themes_animated","am4maps","geodata","am4geodata_worldLow","projection","Miller","homeZoomLevel","homeGeoPoint","longitude","parseInt","location","pathname","replace","split","latitude","polygonSeries","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","polygon","fillOpacity","states","create","properties","fill","getIndex","imageSeries","mapImages","propertyFields","url","circle","createChild","radius","circle2","events","on","animateBullet","animate","property","from","to","circleOut","target","object","colorSet","decodeURIComponent","next","querySelectorAll","Dashboard","response","city","ReactDOM","StrictMode","exact","strict","path"],"mappings":"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","file":"static/js/main.a3030c39.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass SearchBox extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            suggestions: [],\r\n            coordinates: [],\r\n            show: false,\r\n            showSuggestions: true,\r\n            input: \"\",\r\n            selectedCoordinates: null,\r\n            overlay: false,\r\n        }\r\n    }\r\n\r\n    getSelectedElement = () => {\r\n        let selectedOption;\r\n        for (let option of document.getElementById(\"result-list\").children) {\r\n            if (option.classList.contains(\"selected\")) {\r\n                selectedOption = option;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return ({\r\n            cityName: selectedOption.dataset.cityName,\r\n            coordinates: {\r\n                lat: selectedOption.dataset.coordinatesLat,\r\n                long: selectedOption.dataset.coordinatesLong\r\n            }\r\n        });\r\n    }\r\n\r\n    onChange = e => {\r\n        const input = e.currentTarget.value;\r\n        fetch(\"https://nodejs-295719.ew.r.appspot.com/city?\"+input)\r\n        .then( result => result.json() )\r\n        .then( (result) => {\r\n            let places = [];\r\n            let distance = [];\r\n            let coordinates = [];\r\n            result.results.forEach((r) => {\r\n                if (r.category !== \"street-square\") {\r\n                   places.push(r.title)\r\n                   distance.push(r.distance);\r\n                   coordinates.push(r.position) \r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                selected: -1,\r\n                suggestions: places,\r\n                show: true,\r\n                input: input,\r\n                coordinates: coordinates,\r\n                showSuggestions: true\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    overlay = (booleanValue) => {\r\n        this.setState(state => ({ overlay: booleanValue, showSuggestions: booleanValue})); \r\n        \r\n    }\r\n\r\n    onClick = (event,suggestion,lat,long) => {\r\n        if (document.getElementById('loader-overlay') !== null) document.getElementById('loader-overlay').style.display = \"block\";\r\n        setTimeout( () => {\r\n            this.setState(state => ({overlay: false,suggestions: [], showSuggestions: false}));\r\n            this.props.history.push(\"/Weather/\"+suggestion+\"&\"+lat+\"&\"+long);\r\n            document.getElementById('inputSearch').value = \"\"; \r\n        }, 250);\r\n        \r\n    }\r\n\r\n    onKeyDown = e => {\r\n        //Arrow down\r\n        if (e.keyCode === 40) {\r\n            /*\r\n            if ( (this.state.suggestions.length - 1) === this.state.selected) return;\r\n            e.target.value = this.state.suggestions[this.state.selected + 1];\r\n            this.setState({\r\n                selected: this.state.selected + 1,\r\n                show: false,\r\n                input: this.state.suggestions[this.state.selected + 1],\r\n            })\r\n            */\r\n            return;\r\n        }\r\n\r\n        //Arrow up\r\n        if (e.keyCode === 38) {\r\n            /*\r\n            if (this.state.selected === 0 ) return;\r\n            e.target.value = this.state.suggestions[this.state.selected - 1];\r\n            this.setState({\r\n                selected: this.state.selected - 1,\r\n                show: false,\r\n                input: this.state.suggestions[this.state.selected - 1],\r\n            })\r\n            */\r\n            return;\r\n        }\r\n\r\n        //Enter\r\n        if (e.keyCode === 13) {\r\n            /*\r\n            this.props.history.push(document.location.pathname+\"/\"+this.state.suggestions[this.state.selected]+\"&\"+this.state.coordinates[this.state.selected][0]+\"&\"+this.state.coordinates[this.state.selected][1]);\r\n            return;\r\n            */\r\n        }\r\n    }\r\n\r\n    scrollToSelected = elementId => {\r\n        document.getElementById(elementId).childNodes.forEach( (e) =>  {\r\n            if (e.classList.contains('selected') && !this.isInViewport(e)) e.scrollIntoView(true);\r\n        });\r\n        \r\n    }\r\n\r\n    isInViewport = element => {\r\n        const rect = element.getBoundingClientRect();\r\n        return (\r\n            rect.top >= 0 &&\r\n            rect.left >= 0 &&\r\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToSelected('result-list');\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let SuggestionsHtml = [];\r\n        \r\n        if (this.state.showSuggestions === true) {\r\n            this.state.suggestions.forEach((suggestion, index) => {\r\n                SuggestionsHtml.push(\r\n                    <li \r\n                        data-coordinates-lat={this.state.coordinates[index][0]}\r\n                        data-coordinates-long={this.state.coordinates[index][1]}\r\n                        className={ suggestion === this.state.input ? \"list-group-item selected\" : \"list-group-item\"}\r\n                        onClick={(ev) => this.onClick(ev,suggestion, this.state.coordinates[index][0], this.state.coordinates[index][1])}\r\n                        key={suggestion+index}\r\n                        >\r\n                            {suggestion}\r\n                    </li>\r\n                );        \r\n            })\r\n        }\r\n       \r\n        return(\r\n            <Fragment>\r\n                <div className={this.props.size !== \"small\" ? \"input-group z-2\": \"input-group input-group-sm z-2\"}>\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text rounded-0\" id=\"basic-addon1\">\r\n                            <i className=\"fas fa-search fa-xs\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <input id=\"inputSearch\" className=\"form-control rounded-0\" type=\"text\" placeholder=\"City\" aria-label=\"City\" onClick={()=>{this.overlay(true)}} onChange={this.onChange} onKeyDown={this.onKeyDown}/>\r\n                </div>\r\n                <div className={this.props.size !== \"small\" ? \"\" : \"dir-ltr mt-1\"}>\r\n                    <ul id=\"result-list\" className={this.props.size !== \"small\" ? \"list-group rounded-0 position-absolute z-2\" : \"list-group rounded-0 position-absolute z-2 small\"}>\r\n                        {SuggestionsHtml}\r\n                    </ul>\r\n                </div>\r\n                <div id=\"overlay\" className={this.state.overlay === true ? 'overlay d-block z-1' : 'overlay d-none'} onClick={() => {this.overlay(false)}}></div>\r\n            </Fragment>\r\n        )\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(SearchBox);","import React, { Fragment } from 'react';\nimport SearchBox from './SearchBox';\nimport './App.css';\n\nfunction Search() {\n  return (\n    <Fragment>\n      <div className=\"bg-image\"></div>\n      <div className=\"container h-100\">\n        <div className=\"row align-items-center h-90\">\n          <div className=\"col-10 mx-auto\">\n            <p className=\"h2 text-center text-white\"><strong>Check how the weather looks like<br/>in the rest of the world</strong></p>\n            <p className=\"lead text-center text-white mb-5\">This is a collection of data about temperatures and precipitations, that has been<br/>recorded in the last 30 years, around the world.</p>\n            <SearchBox/>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Search;\n","import React, {Component, Fragment } from 'react';\r\nimport Chart from \"chart.js\";\r\n\r\nlet precipitationChart = null;\r\n\r\nclass Precipitation extends Component {\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.data).length > 0) this.createGraph();\r\n    \r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (Object.keys(this.props.data).length > 0) this.createGraph();\r\n        \r\n    }\r\n\r\n    createGraph() {\r\n        /** Clear canvas before redrawing */\r\n        if (precipitationChart !== null) precipitationChart.destroy();\r\n\r\n        Chart.defaults.global.legend.display = false;\r\n\r\n        precipitationChart = new Chart(document.getElementById(this.props.id), {\r\n            type: \"bar\",\r\n            data: {\r\n                //Bring in data\r\n                labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Average precipitation\",\r\n                        borderColor: '#96e3e3',\r\n                        backgroundColor: '#cae6e6',\r\n                        data: [\r\n                            this.props.data.data[0][this.props.id], \r\n                            this.props.data.data[1][this.props.id],\r\n                            this.props.data.data[2][this.props.id], \r\n                            this.props.data.data[3][this.props.id],\r\n                            this.props.data.data[4][this.props.id], \r\n                            this.props.data.data[5][this.props.id], \r\n                            this.props.data.data[6][this.props.id], \r\n                            this.props.data.data[7][this.props.id],\r\n                            this.props.data.data[8][this.props.id], \r\n                            this.props.data.data[9][this.props.id], \r\n                            this.props.data.data[10][this.props.id], \r\n                            this.props.data.data[11][this.props.id]\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                layout: {\r\n                    padding: {\r\n                        left: -5,\r\n                    }\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <canvas id={this.props.id}/>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Precipitation;","import React, {Component, Fragment } from 'react';\r\nimport ApexCharts from \"apexcharts\";\r\n\r\nclass TemperatureWrapper extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTemperature: 'tavg',\r\n            gradient: ['rgba(250,174,50,1)','rgba(250,174,50,0)'],\r\n            gradientLinearity: [0, 0, 0, 150]\r\n        }\r\n    }\r\n\r\n    updateSelection(newTemperature, gradient, gradientLinearity) {\r\n        this.setState(state => ({\r\n            selectedTemperature: newTemperature,\r\n            gradient: gradient,\r\n            gradientLinearity: gradientLinearity\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card rounded-0\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-5\">\r\n                            <h5 className=\"card-title\">Yearly Temperature</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Temperature id={this.state.selectedTemperature} data={this.props.data} gradient={this.state.gradient} gradientLinearity={this.state.gradientLinearity}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Temperature extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: this.props.type,\r\n            id: this.props.id,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.data).length > 0) this.createGraph();\r\n    \r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (Object.keys(this.props.data).length > 0) this.createGraph();\r\n        \r\n    }\r\n\r\n    createGraph() {\r\n        document.querySelector('#apexChartsId').innerHTML = '';\r\n\r\n        let measurementUnit = '°C';\r\n        let options = {\r\n            series: [\r\n                {\r\n                    name: \"Max\",\r\n                    data: [\r\n                        this.props.data.data[0]['tmax'] + measurementUnit, \r\n                        this.props.data.data[1]['tmax'] + measurementUnit,\r\n                        this.props.data.data[2]['tmax'] + measurementUnit, \r\n                        this.props.data.data[3]['tmax'] + measurementUnit,\r\n                        this.props.data.data[4]['tmax'] + measurementUnit, \r\n                        this.props.data.data[5]['tmax'] + measurementUnit, \r\n                        this.props.data.data[6]['tmax'] + measurementUnit, \r\n                        this.props.data.data[7]['tmax'] + measurementUnit,\r\n                        this.props.data.data[8]['tmax'] + measurementUnit, \r\n                        this.props.data.data[9]['tmax'] + measurementUnit, \r\n                        this.props.data.data[10]['tmax'] + measurementUnit, \r\n                        this.props.data.data[11]['tmax'] + measurementUnit\r\n                    ]    \r\n                },\r\n                {\r\n                    name: \"Average\",\r\n                    data: [\r\n                        this.props.data.data[0]['tavg'] + measurementUnit, \r\n                        this.props.data.data[1]['tavg'] + measurementUnit,\r\n                        this.props.data.data[2]['tavg'] + measurementUnit, \r\n                        this.props.data.data[3]['tavg'] + measurementUnit,\r\n                        this.props.data.data[4]['tavg'] + measurementUnit, \r\n                        this.props.data.data[5]['tavg'] + measurementUnit, \r\n                        this.props.data.data[6]['tavg'] + measurementUnit, \r\n                        this.props.data.data[7]['tavg'] + measurementUnit,\r\n                        this.props.data.data[8]['tavg'] + measurementUnit, \r\n                        this.props.data.data[9]['tavg'] + measurementUnit, \r\n                        this.props.data.data[10]['tavg'] + measurementUnit, \r\n                        this.props.data.data[11]['tavg'] + measurementUnit\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"Min\",\r\n                    data: [\r\n                        this.props.data.data[0]['tmin'] + measurementUnit, \r\n                        this.props.data.data[1]['tmin'] + measurementUnit,\r\n                        this.props.data.data[2]['tmin'] + measurementUnit, \r\n                        this.props.data.data[3]['tmin'] + measurementUnit,\r\n                        this.props.data.data[4]['tmin'] + measurementUnit, \r\n                        this.props.data.data[5]['tmin'] + measurementUnit, \r\n                        this.props.data.data[6]['tmin'] + measurementUnit, \r\n                        this.props.data.data[7]['tmin'] + measurementUnit,\r\n                        this.props.data.data[8]['tmin'] + measurementUnit, \r\n                        this.props.data.data[9]['tmin'] + measurementUnit, \r\n                        this.props.data.data[10]['tmin'] + measurementUnit, \r\n                        this.props.data.data[11]['tmin'] + measurementUnit\r\n                    ]\r\n                }\r\n            ],\r\n            colors: [ '#e67e7e', '#b5b5b5', '#96e3e3'],\r\n            legend: {\r\n                show: false\r\n            },\r\n            chart: {\r\n                height: 400,\r\n                type: 'line',\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    enabledOnSeries: undefined,\r\n                    top: 0,\r\n                    left: 10,\r\n                    blur: 6,\r\n                    color: '#000',\r\n                    opacity: 0.15\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                dashArray: [0,8,0]\r\n            },\r\n            grid: {\r\n                row: {\r\n                colors: ['transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.5\r\n                },\r\n            },\r\n            xaxis: {\r\n                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            }\r\n          };\r\n  \r\n          var chart = new ApexCharts(document.querySelector(\"#apexChartsId\"), options);\r\n          chart.render();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div id=\"apexChartsId\"></div>  \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemperatureWrapper;","import React, {Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport am4themes_frozen from \"@amcharts/amcharts4/themes/frozen\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nclass Map extends Component {\r\n\r\n    componentDidMount() {\r\n        this.createMap();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.createMap();\r\n    }\r\n\r\n    createMap(){\r\n        /* Chart code */\r\n        // Themes begin\r\n        am4core.useTheme(am4themes_frozen);\r\n        am4core.useTheme(am4themes_animated);\r\n        // Themes end\r\n\r\n        // Create map instance\r\n        let chart = am4core.create(\"worldMap\", am4maps.MapChart);\r\n\r\n        // Set map definition\r\n        chart.geodata = am4geodata_worldLow;\r\n\r\n        // Set projection\r\n        chart.projection = new am4maps.projections.Miller();\r\n\r\n        // Center on the groups by default\r\n        chart.homeZoomLevel = 3;\r\n        chart.homeGeoPoint = { \r\n            longitude: parseInt(document.location.pathname.replace(\"/\",\"\").split(\"&\")[2]),\r\n            latitude: parseInt(document.location.pathname.replace(\"/\",\"\").split(\"&\")[1])\r\n        };\r\n\r\n        // Create map polygon series\r\n        let polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n\r\n        // Make map load polygon (like country names) data from GeoJSON\r\n        polygonSeries.useGeodata = true;\r\n\r\n        // Configure series\r\n        let polygonTemplate = polygonSeries.mapPolygons.template;\r\n        polygonTemplate.tooltipText = \"{name}\";\r\n        polygonTemplate.polygon.fillOpacity = 0.6;\r\n\r\n\r\n        // Create hover state and set alternative fill color\r\n        let hs = polygonTemplate.states.create(\"hover\");\r\n        hs.properties.fill = chart.colors.getIndex(0);\r\n\r\n        // Add image series\r\n        let imageSeries = chart.series.push(new am4maps.MapImageSeries());\r\n        imageSeries.mapImages.template.propertyFields.longitude = \"longitude\";\r\n        imageSeries.mapImages.template.propertyFields.latitude = \"latitude\";\r\n        imageSeries.mapImages.template.tooltipText = \"{title}\";\r\n        imageSeries.mapImages.template.propertyFields.url = \"url\";\r\n\r\n        let circle = imageSeries.mapImages.template.createChild(am4core.Circle);\r\n        circle.radius = 1;\r\n        circle.propertyFields.fill = \"color\";\r\n\r\n        let circle2 = imageSeries.mapImages.template.createChild(am4core.Circle);\r\n        circle2.radius = 1;\r\n        circle2.propertyFields.fill = \"color\";\r\n\r\n        circle2.events.on(\"inited\", function(event){\r\n            animateBullet(event.target);\r\n        })\r\n\r\n\r\n        function animateBullet(circle) {\r\n            let animation = circle.animate([{ property: \"scale\", from: 1, to: 5 }, { property: \"opacity\", from: 1, to: 0 }], 1000, am4core.ease.circleOut);\r\n            animation.events.on(\"animationended\", function(event){\r\n            animateBullet(event.target.object);\r\n            })\r\n        }\r\n\r\n        let colorSet = new am4core.ColorSet();\r\n        \r\n        imageSeries.data = [ {\r\n            \"title\": decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0]),\r\n            \"latitude\": parseInt(document.location.pathname.replace(\"/\",\"\").split(\"&\")[1]),\r\n            \"longitude\": parseInt(document.location.pathname.replace(\"/\",\"\").split(\"&\")[2]),\r\n            \"color\":colorSet.next()\r\n        }]\r\n        \r\n        //Remove logo\r\n        document.querySelectorAll('[aria-labelledby]')[0].style.display = \"none\"\r\n            \r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div id=\"worldMap\" className=\"h-90\"></div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Map);\r\n","import React, {Component, Fragment } from 'react';\r\nimport SearchBox from './SearchBox';\r\nimport Precipitation from './Precipitation';\r\nimport TemperatureWrapper from './Temperature';\r\nimport Map from \"./Map\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            response: {},\r\n            selectedTemperature: 'tavg',\r\n            city: decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lat = document.location.pathname.replace(\"/\",\"\").split(\"&\")[1];\r\n        let long = document.location.pathname.replace(\"/\",\"\").split(\"&\")[2];\r\n\r\n        if (document.getElementById('loader-overlay') !== null) document.getElementById('loader-overlay').style.display = \"block\";\r\n        fetch(\"https://nodejs-295719.ew.r.appspot.com/stats?lat=\"+lat+\"&long=\"+long)\r\n        .then( response => response.json())\r\n        .then( (response) => {\r\n            this.setState(state => ({response: response, city: decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])}));\r\n            if (document.getElementById('loader-overlay') !== null) document.getElementById('loader-overlay').style.display = \"none\";\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.city !== decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])) {\r\n            let lat = document.location.pathname.replace(\"/\",\"\").split(\"&\")[1];\r\n            let long = document.location.pathname.replace(\"/\",\"\").split(\"&\")[2];\r\n            \r\n            if (document.getElementById('loader-overlay') !== null) document.getElementById('loader-overlay').style.display = \"block\";\r\n            fetch(\"https://nodejs-295719.ew.r.appspot.com/stats?lat=\"+lat+\"&long=\"+long)\r\n            .then( response => response.json())\r\n            .then( (response) => {\r\n                this.setState(state => ({response: response, city: decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])}));\r\n                if (document.getElementById('loader-overlay') !== null) document.getElementById('loader-overlay').style.display = \"none\";\r\n            });\r\n        }\r\n        \r\n    }\r\n    \r\n    render() {\r\n     return(\r\n        <Fragment>\r\n            <div id=\"loader-overlay\" className=\"loader-overlay z-3\">\r\n                <div id=\"loader\" className=\"loader\"></div>\r\n            </div>\r\n            <div className=\"container-fluid h-100\">\r\n                <div className=\"row header h-60p\">\r\n                    <div className=\"col-4 my-auto ml-auto text-muted\">\r\n                        <h3>\r\n                            <div className=\"homeButton\" onClick={() => {this.props.history.push(\"/Weather/\");}}>Home</div>\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"col-6 my-auto mr-auto\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\"></div>\r\n                            <div className=\"col-6\">\r\n                                <SearchBox size=\"small\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-4 pt-30\">\r\n                                <div className=\"card rounded-0 h-100\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])}</h5>\r\n                                        <Map/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-8 pt-30\">\r\n                                <TemperatureWrapper data={this.state.response}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-4 pt-30 mr-auto\">   \r\n                                <div className=\"card rounded-0\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Yearly precipitation</h5>\r\n                                        <p className=\"card-text\">\r\n                                            <Precipitation id=\"prcp\" data={this.state.response}/>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>         \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        </Fragment> \r\n    ); \r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport './index.css';\nimport Search from './Search.js';\nimport Dashboard from './Dashboard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact strict path=\"/Weather/(.*.{1,})\">\n          <Dashboard city={decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])}/>\n        </Route>\n        <Route>\n          <Search/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}