{"version":3,"sources":["SearchBox.js","Search.js","Precipitation.js","Temperature.js","Map.js","Stats.js","Dashboard.js","Loader.js","index.js"],"names":["SearchBox","props","getSelectedElement","selectedOption","document","getElementById","children","option","classList","contains","cityName","dataset","coordinates","lat","coordinatesLat","long","coordinatesLong","onChange","e","input","currentTarget","value","fetch","then","result","json","places","distance","hasOwnProperty","results","forEach","r","category","position","push","title","console","log","setState","selected","suggestions","show","onClick","event","suggestion","history","onKeyDown","keyCode","scrollToSelected","elementId","childNodes","isInViewport","scrollIntoView","element","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","state","selectedCoordinates","this","SuggestionsHtml","index","data-coordinates-lat","data-coordinates-long","className","ev","key","id","size","type","placeholder","aria-label","Component","withRouter","Search","setTimeout","style","display","Precipitation","Object","keys","data","length","createGraph","innerHTML","options","series","name","chart","height","toolbar","plotOptions","bar","horizontal","columnWidth","dataLabels","enabled","stroke","width","colors","xaxis","categories","fill","gradient","shade","shadeIntensity","gradientToColors","undefined","inverseColors","opacityFrom","opacityTo","stops","tooltip","y","formatter","val","ApexCharts","render","TemperatureWrapper","selectedTemperature","gradientLinearity","newTemperature","Temperature","querySelector","legend","zoom","dropShadow","enabledOnSeries","blur","color","opacity","curve","dashArray","grid","row","Map","createMap","am4core","am4themes_frozen","am4themes_animated","am4maps","geodata","am4geodata_worldLow","projection","Miller","homeZoomLevel","homeGeoPoint","longitude","parseInt","location","pathname","replace","split","latitude","polygonSeries","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","polygon","fillOpacity","states","create","properties","getIndex","imageSeries","mapImages","propertyFields","url","circle","createChild","radius","circle2","events","on","animateBullet","animate","property","from","to","circleOut","target","object","colorSet","decodeURIComponent","next","querySelectorAll","Stats","getDeviation","months","calculateAverage","toFixed","response","total","classColor","getTextColor","output","max","getMaximum","min","getMinimum","computeData","Dashboard","city","Loader","ReactDOM","StrictMode","exact","strict","path"],"mappings":"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","file":"static/js/main.eb972eea.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass SearchBox extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            suggestions: [],\r\n            coordinates: [],\r\n            show: false,\r\n            input: \"\",\r\n            selectedCoordinates: null\r\n        }\r\n    }\r\n\r\n    getSelectedElement = () => {\r\n        let selectedOption;\r\n        for (let option of document.getElementById(\"result-list\").children) {\r\n            if (option.classList.contains(\"selected\")) {\r\n                selectedOption = option;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return ({\r\n            cityName: selectedOption.dataset.cityName,\r\n            coordinates: {\r\n                lat: selectedOption.dataset.coordinatesLat,\r\n                long: selectedOption.dataset.coordinatesLong\r\n            }\r\n        });\r\n    }\r\n\r\n    onChange = e => {\r\n        const input = e.currentTarget.value;\r\n        fetch(\"https://nodejs-295719.ew.r.appspot.com/city?\"+input)\r\n        .then( result => result.json() )\r\n        .then( (result) => {\r\n            let places = [];\r\n            let distance = [];\r\n            let coordinates = [];\r\n            if (result.hasOwnProperty('results')) {\r\n                result.results.forEach((r) => {\r\n                    if (r.category !== \"street-square\" && typeof r.position !== 'undefined') {\r\n                    places.push(r.title)\r\n                    distance.push(r.distance);\r\n                    coordinates.push(r.position); \r\n                    }\r\n                });\r\n            }\r\n            console.log(coordinates);\r\n            this.setState({\r\n                selected: -1,\r\n                suggestions: places,\r\n                show: true,\r\n                input: input,\r\n                coordinates: coordinates\r\n            });\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    onClick = (event,suggestion,lat,long) => {\r\n        this.props.history.push(\"/Weather/\"+suggestion+\"&\"+lat+\"&\"+long);\r\n        return;\r\n    }\r\n\r\n    onKeyDown = e => {\r\n        //Arrow down\r\n        if (e.keyCode === 40) {\r\n            /*\r\n            if ( (this.state.suggestions.length - 1) === this.state.selected) return;\r\n            e.target.value = this.state.suggestions[this.state.selected + 1];\r\n            this.setState({\r\n                selected: this.state.selected + 1,\r\n                show: false,\r\n                input: this.state.suggestions[this.state.selected + 1],\r\n            })\r\n            */\r\n            return;\r\n        }\r\n\r\n        //Arrow up\r\n        if (e.keyCode === 38) {\r\n            /*\r\n            if (this.state.selected === 0 ) return;\r\n            e.target.value = this.state.suggestions[this.state.selected - 1];\r\n            this.setState({\r\n                selected: this.state.selected - 1,\r\n                show: false,\r\n                input: this.state.suggestions[this.state.selected - 1],\r\n            })\r\n            */\r\n            return;\r\n        }\r\n\r\n        //Enter\r\n        if (e.keyCode === 13) {\r\n            /*\r\n            this.props.history.push(document.location.pathname+\"/\"+this.state.suggestions[this.state.selected]+\"&\"+this.state.coordinates[this.state.selected][0]+\"&\"+this.state.coordinates[this.state.selected][1]);\r\n            return;\r\n            */\r\n        }\r\n    }\r\n\r\n    scrollToSelected = elementId => {\r\n        document.getElementById(elementId).childNodes.forEach( (e) =>  {\r\n            if (e.classList.contains('selected') && !this.isInViewport(e)) e.scrollIntoView(true);\r\n        });\r\n        \r\n    }\r\n\r\n    isInViewport = element => {\r\n        const rect = element.getBoundingClientRect();\r\n        return (\r\n            rect.top >= 0 &&\r\n            rect.left >= 0 &&\r\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToSelected('result-list');\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let SuggestionsHtml = []\r\n        \r\n        this.state.suggestions.forEach((suggestion, index) => {\r\n            SuggestionsHtml.push(\r\n                <li \r\n                    data-coordinates-lat={this.state.coordinates[index][0]}\r\n                    data-coordinates-long={this.state.coordinates[index][1]}\r\n                    className={ suggestion === this.state.input ? \"list-group-item selected\" : \"list-group-item\"}\r\n                    onClick={(ev) => this.onClick(ev,suggestion, this.state.coordinates[index][0], this.state.coordinates[index][1])}\r\n                    key={suggestion+index}\r\n                    >\r\n                        {suggestion}\r\n                </li>\r\n            );        \r\n        })\r\n       \r\n        return(\r\n            <Fragment>\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text rounded-0\" id=\"basic-addon1\">\r\n                            <i className=\"fas fa-search fa-xs\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <input className={this.props.size === \"tiny\" ? \"form-control rounded-0 tiny\" : \"form-control rounded-0\"} type=\"text\" placeholder=\"City\" aria-label=\"City\" onChange={this.onChange} onKeyDown={this.onKeyDown}/>\r\n                </div>\r\n                <ul id=\"result-list\" className={this.props.size === 'tiny' ? \"list-group position-absolute rounded-0 tiny\": \"list-group rounded-0 position-absolute\"}>\r\n                    {SuggestionsHtml}\r\n                </ul>\r\n            </Fragment>\r\n        )\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(SearchBox);","import React, { Fragment } from 'react';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css';\r\n\r\nfunction Search() {\r\n  setTimeout(() => {\r\n    if (document.getElementById('loader-overlay') !== null) document.getElementById('loader-overlay').style.display = \"none\";\r\n  }, 500)\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"bg-image\"></div>\r\n      <div className=\"container h-100\">\r\n        <div className=\"row align-items-center h-90\">\r\n          <div className=\"col-10 mx-auto\">\r\n            <p className=\"h2 text-center text-white\"><strong>Check how the weather looks like<br/>in the rest of the world</strong></p>\r\n            <p className=\"lead text-center text-white mb-5\">This is a collection of data about temperatures and precipitations, that has been<br/>recorded in the last 30 years, around the world.</p>\r\n            <SearchBox/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, {Component, Fragment } from 'react';\r\nimport ApexCharts from 'apexcharts';\r\n\r\nclass Precipitation extends Component {\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.data).length > 0) this.createGraph();\r\n    \r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (Object.keys(this.props.data).length > 0) this.createGraph();\r\n        \r\n    }\r\n\r\n    createGraph() {\r\n        document.getElementById(this.props.id).innerHTML = '';\r\n\r\n        var options = {\r\n            series: [\r\n                {\r\n                    name: \"Average precipitation\",\r\n                    data: [\r\n                        this.props.data.data[0][this.props.id], \r\n                        this.props.data.data[1][this.props.id],\r\n                        this.props.data.data[2][this.props.id], \r\n                        this.props.data.data[3][this.props.id],\r\n                        this.props.data.data[4][this.props.id], \r\n                        this.props.data.data[5][this.props.id], \r\n                        this.props.data.data[6][this.props.id], \r\n                        this.props.data.data[7][this.props.id],\r\n                        this.props.data.data[8][this.props.id], \r\n                        this.props.data.data[9][this.props.id], \r\n                        this.props.data.data[10][this.props.id], \r\n                        this.props.data.data[11][this.props.id]\r\n                    ]\r\n                }\r\n            ],\r\n            chart: {\r\n                type: 'bar',\r\n                height: 220,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: '55%',\r\n                },\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            },\r\n            fill: {\r\n                type: 'gradient',\r\n                gradient: {\r\n                    shade: 'light',\r\n                    type: \"horizontal\",\r\n                    shadeIntensity: 0.25,\r\n                    gradientToColors: undefined,\r\n                    inverseColors: true,\r\n                    opacityFrom: 0.85,\r\n                    opacityTo: 0.85,\r\n                    stops: [50, 0, 100]\r\n                }\r\n            },\r\n            tooltip: {\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return val + \" mm\"\r\n                    }\r\n                }\r\n            }\r\n        };\r\n  \r\n        var chart = new ApexCharts(document.getElementById(this.props.id), options);\r\n        chart.render();\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div id={this.props.id}></div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Precipitation;","import React, {Component, Fragment } from 'react';\r\nimport ApexCharts from \"apexcharts\";\r\n\r\nclass TemperatureWrapper extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTemperature: 'tavg',\r\n            gradient: ['rgba(250,174,50,1)','rgba(250,174,50,0)'],\r\n            gradientLinearity: [0, 0, 0, 150]\r\n        }\r\n    }\r\n\r\n    updateSelection(newTemperature, gradient, gradientLinearity) {\r\n        this.setState(state => ({\r\n            selectedTemperature: newTemperature,\r\n            gradient: gradient,\r\n            gradientLinearity: gradientLinearity\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card rounded-0\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-5\">\r\n                            <h5 className=\"card-title\">Yearly Temperature</h5>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Temperature id={this.state.selectedTemperature} data={this.props.data} gradient={this.state.gradient} gradientLinearity={this.state.gradientLinearity}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Temperature extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: this.props.type,\r\n            id: this.props.id,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (Object.keys(this.props.data).length > 0) this.createGraph();\r\n    \r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (Object.keys(this.props.data).length > 0) this.createGraph();\r\n        \r\n    }\r\n\r\n    createGraph() {\r\n        document.querySelector('#apexChartsId').innerHTML = '';\r\n\r\n        let measurementUnit = '°C';\r\n        let options = {\r\n            series: [\r\n                {\r\n                    name: \"Max\",\r\n                    data: [\r\n                        this.props.data.data[0]['tmax'] + measurementUnit, \r\n                        this.props.data.data[1]['tmax'] + measurementUnit,\r\n                        this.props.data.data[2]['tmax'] + measurementUnit, \r\n                        this.props.data.data[3]['tmax'] + measurementUnit,\r\n                        this.props.data.data[4]['tmax'] + measurementUnit, \r\n                        this.props.data.data[5]['tmax'] + measurementUnit, \r\n                        this.props.data.data[6]['tmax'] + measurementUnit, \r\n                        this.props.data.data[7]['tmax'] + measurementUnit,\r\n                        this.props.data.data[8]['tmax'] + measurementUnit, \r\n                        this.props.data.data[9]['tmax'] + measurementUnit, \r\n                        this.props.data.data[10]['tmax'] + measurementUnit, \r\n                        this.props.data.data[11]['tmax'] + measurementUnit\r\n                    ]    \r\n                },\r\n                {\r\n                    name: \"Average\",\r\n                    data: [\r\n                        this.props.data.data[0]['tavg'] + measurementUnit, \r\n                        this.props.data.data[1]['tavg'] + measurementUnit,\r\n                        this.props.data.data[2]['tavg'] + measurementUnit, \r\n                        this.props.data.data[3]['tavg'] + measurementUnit,\r\n                        this.props.data.data[4]['tavg'] + measurementUnit, \r\n                        this.props.data.data[5]['tavg'] + measurementUnit, \r\n                        this.props.data.data[6]['tavg'] + measurementUnit, \r\n                        this.props.data.data[7]['tavg'] + measurementUnit,\r\n                        this.props.data.data[8]['tavg'] + measurementUnit, \r\n                        this.props.data.data[9]['tavg'] + measurementUnit, \r\n                        this.props.data.data[10]['tavg'] + measurementUnit, \r\n                        this.props.data.data[11]['tavg'] + measurementUnit\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"Min\",\r\n                    data: [\r\n                        this.props.data.data[0]['tmin'] + measurementUnit, \r\n                        this.props.data.data[1]['tmin'] + measurementUnit,\r\n                        this.props.data.data[2]['tmin'] + measurementUnit, \r\n                        this.props.data.data[3]['tmin'] + measurementUnit,\r\n                        this.props.data.data[4]['tmin'] + measurementUnit, \r\n                        this.props.data.data[5]['tmin'] + measurementUnit, \r\n                        this.props.data.data[6]['tmin'] + measurementUnit, \r\n                        this.props.data.data[7]['tmin'] + measurementUnit,\r\n                        this.props.data.data[8]['tmin'] + measurementUnit, \r\n                        this.props.data.data[9]['tmin'] + measurementUnit, \r\n                        this.props.data.data[10]['tmin'] + measurementUnit, \r\n                        this.props.data.data[11]['tmin'] + measurementUnit\r\n                    ]\r\n                }\r\n            ],\r\n            colors: [ '#e67e7e', '#b5b5b5', '#47aefc'],\r\n            legend: {\r\n                show: false\r\n            },\r\n            chart: {\r\n                height: 220,\r\n                type: 'line',\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    enabledOnSeries: undefined,\r\n                    top: 0,\r\n                    left: 10,\r\n                    blur: 6,\r\n                    color: '#000',\r\n                    opacity: 0.15\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                dashArray: [0,8,0]\r\n            },\r\n            grid: {\r\n                row: {\r\n                    colors: ['transparent'], // takes an array which will be repeated on columns\r\n                    opacity: 0.5\r\n                },\r\n            },\r\n            xaxis: {\r\n                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            }\r\n          };\r\n  \r\n          var chart = new ApexCharts(document.querySelector(\"#apexChartsId\"), options);\r\n          chart.render();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div id=\"apexChartsId\"></div>  \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemperatureWrapper;","import React, {Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport am4themes_frozen from \"@amcharts/amcharts4/themes/frozen\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nclass Map extends Component {\r\n\r\n    componentDidMount() {\r\n        this.createMap();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.createMap();\r\n    }\r\n\r\n    createMap(){\r\n        /* Chart code */\r\n        // Themes begin\r\n        am4core.useTheme(am4themes_frozen);\r\n        am4core.useTheme(am4themes_animated);\r\n        // Themes end\r\n\r\n        // Create map instance\r\n        let chart = am4core.create(\"worldMap\", am4maps.MapChart);\r\n\r\n        // Set map definition\r\n        chart.geodata = am4geodata_worldLow;\r\n\r\n        // Set projection\r\n        chart.projection = new am4maps.projections.Miller();\r\n\r\n        // Center on the groups by default\r\n        chart.homeZoomLevel = 5;\r\n        chart.homeGeoPoint = { \r\n            longitude: parseInt(document.location.pathname.replace(\"/\",\"\").split(\"&\")[2]),\r\n            latitude: parseInt(document.location.pathname.replace(\"/\",\"\").split(\"&\")[1])\r\n        };\r\n\r\n        // Create map polygon series\r\n        let polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n\r\n        // Make map load polygon (like country names) data from GeoJSON\r\n        polygonSeries.useGeodata = true;\r\n\r\n        // Configure series\r\n        let polygonTemplate = polygonSeries.mapPolygons.template;\r\n        polygonTemplate.tooltipText = \"{name}\";\r\n        polygonTemplate.polygon.fillOpacity = 0.6;\r\n\r\n\r\n        // Create hover state and set alternative fill color\r\n        let hs = polygonTemplate.states.create(\"hover\");\r\n        hs.properties.fill = chart.colors.getIndex(0);\r\n\r\n        // Add image series\r\n        let imageSeries = chart.series.push(new am4maps.MapImageSeries());\r\n        imageSeries.mapImages.template.propertyFields.longitude = \"longitude\";\r\n        imageSeries.mapImages.template.propertyFields.latitude = \"latitude\";\r\n        imageSeries.mapImages.template.tooltipText = \"{title}\";\r\n        imageSeries.mapImages.template.propertyFields.url = \"url\";\r\n\r\n        let circle = imageSeries.mapImages.template.createChild(am4core.Circle);\r\n        circle.radius = 1;\r\n        circle.propertyFields.fill = \"color\";\r\n\r\n        let circle2 = imageSeries.mapImages.template.createChild(am4core.Circle);\r\n        circle2.radius = 1;\r\n        circle2.propertyFields.fill = \"color\";\r\n\r\n        circle2.events.on(\"inited\", function(event){\r\n            animateBullet(event.target);\r\n        })\r\n\r\n\r\n        function animateBullet(circle) {\r\n            let animation = circle.animate([{ property: \"scale\", from: 1, to: 5 }, { property: \"opacity\", from: 1, to: 0 }], 1000, am4core.ease.circleOut);\r\n            animation.events.on(\"animationended\", function(event){\r\n            animateBullet(event.target.object);\r\n            })\r\n        }\r\n\r\n        let colorSet = new am4core.ColorSet();\r\n        \r\n        imageSeries.data = [ {\r\n            \"title\": decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0]),\r\n            \"latitude\": parseInt(document.location.pathname.replace(\"/\",\"\").split(\"&\")[1]),\r\n            \"longitude\": parseInt(document.location.pathname.replace(\"/\",\"\").split(\"&\")[2]),\r\n            \"color\":colorSet.next()\r\n        }]\r\n        \r\n        //Remove logo\r\n        document.querySelectorAll('[aria-labelledby]')[0].style.display = \"none\"\r\n            \r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div id=\"worldMap\" className=\"h-90\"></div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Map);\r\n","import React from 'react';\r\n\r\nfunction Stats(props) {\r\n\r\n    function getDeviation(data, property, months) {\r\n        let average = calculateAverage(data, property, months)\r\n        return (average - 12.7).toFixed(1);\r\n    }\r\n\r\n    function getMaximum(response, property) {\r\n        if (typeof response.data === \"undefined\") return;\r\n        let max = response.data[0][property];\r\n        response.data.forEach( element => {\r\n            if (element[property] > max) max = element[property]; \r\n        });\r\n        return max;\r\n    }\r\n\r\n    function getMinimum(response, property) {\r\n        if (typeof response.data === \"undefined\") return;\r\n        let min = response.data[0][property];\r\n        response.data.forEach( element => {\r\n            if (element[property] < min) min = element[property]; \r\n        });\r\n        return min;\r\n    }\r\n\r\n    function calculateAverage(response, property, months) {\r\n        if (typeof response.data === \"undefined\") return;\r\n        let total = 0;\r\n        response.data.forEach(element => {\r\n            total += element[property]\r\n        });\r\n        return((total/months).toFixed(1));\r\n\r\n    }\r\n\r\n    function computeData(data, property, months) {\r\n        let output;\r\n        switch (property) {\r\n            case \"deviation\":\r\n                output = getDeviation(data, 'tavg', months);\r\n                break;\r\n            case \"tavg\":\r\n                output = calculateAverage(data, property, months);\r\n                break;\r\n            case \"tmax\":\r\n                output = getMaximum(data, property);\r\n                break;\r\n            case \"tmin\":\r\n                output = getMinimum(data, property);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return output;\r\n    }\r\n\r\n    function getTextColor(data, property, months) {\r\n        let classColor;\r\n        switch (property) {\r\n            case \"deviation\":\r\n                classColor = getDeviation(data, 'tavg', months) > 0 ? 'text-warm' : 'text-cold';\r\n                break;\r\n            case \"tavg\":\r\n                classColor = 'text-muted';\r\n                break;\r\n            case \"tmax\":\r\n                classColor = 'text-warm';\r\n                break;\r\n            case \"tmin\":\r\n                classColor = 'text-cold';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return classColor;\r\n    }\r\n\r\n    return(\r\n        <div className=\"card rounded-0 h-100\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title one-line\">{props.title}</h5>\r\n                <br></br>\r\n                <div className={\"card-text \" + getTextColor(props.data, props.value, 12)}>\r\n                    <h6>\r\n                      {computeData(props.data, props.value, 12) + \"°C\"}  \r\n                    </h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Stats;","import React, {Component, Fragment } from 'react';\r\nimport SearchBox from './SearchBox';\r\nimport Precipitation from './Precipitation';\r\nimport TemperatureWrapper from './Temperature';\r\nimport Map from \"./Map\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Stats from './Stats';\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            response: {},\r\n            selectedTemperature: 'tavg',\r\n            city: decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let lat = document.location.pathname.replace(\"/\",\"\").split(\"&\")[1];\r\n        let long = document.location.pathname.replace(\"/\",\"\").split(\"&\")[2];\r\n\r\n        if (document.getElementById('loader-overlay') !== null) document.getElementById('loader-overlay').style.display = \"block\";\r\n        fetch(\"https://nodejs-295719.ew.r.appspot.com/stats?lat=\"+lat+\"&long=\"+long)\r\n        .then( response => response.json())\r\n        .then( (response) => {\r\n            console.log(response);\r\n            this.setState(state => ({response: response, city: decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])}));\r\n            if (document.getElementById('loader-overlay') !== null) document.getElementById('loader-overlay').style.display = \"none\";\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.city !== decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])) {\r\n            let lat = document.location.pathname.replace(\"/\",\"\").split(\"&\")[1];\r\n            let long = document.location.pathname.replace(\"/\",\"\").split(\"&\")[2];\r\n            \r\n            if (document.getElementById('loader-overlay') !== null) document.getElementById('loader-overlay').style.display = \"block\";\r\n            fetch(\"https://nodejs-295719.ew.r.appspot.com/stats?lat=\"+lat+\"&long=\"+long)\r\n            .then( response => response.json())\r\n            .then( (response) => {\r\n                this.setState(state => ({response: response, city: decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])}));\r\n                if (document.getElementById('loader-overlay') !== null) document.getElementById('loader-overlay').style.display = \"none\";\r\n            });\r\n        }\r\n        \r\n    }\r\n    \r\n    render() {\r\n     return(\r\n        <Fragment>\r\n            <div className=\"container-fluid h-100\">\r\n                <div className=\"row header h-60p\">\r\n                    <div className=\"col-4 my-auto ml-auto text-muted\">\r\n                        <h3>\r\n                            <div className=\"homeButton\" onClick={() => {this.props.history.push(\"/Weather/\");}}>Home</div>\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"col-5 my-auto mr-auto\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\"></div>\r\n                            <div className=\"col-6\">\r\n                                <SearchBox size=\"small\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-9 mx-auto\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-4 mr-auto\">   \r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-6 pt-30\">\r\n                                        <Stats title=\"Average Temperature\" data={this.state.response} value=\"tavg\"/> \r\n                                    </div>\r\n                                    <div className=\"col-xl-6 pt-30\">\r\n                                        <Stats title=\"Maximum Temperature\" data={this.state.response} value=\"tmax\"/> \r\n                                    </div> \r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xl-6 pt-30\">\r\n                                        <Stats title=\"Minimum Temperature\" data={this.state.response} value=\"tmin\"/>\r\n                                    </div>\r\n                                    <div className=\"col-xl-6 pt-30\">\r\n                                        <Stats title=\"Global Average Deviation\" data={this.state.response} value=\"deviation\"/> \r\n                                    </div>\r\n                                </div>           \r\n                            </div>\r\n                            <div className=\"col-xl-8 pt-30\">\r\n                                <div className=\"card rounded-0 h-100\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])}</h5>\r\n                                        <Map/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-4 pt-30 mr-auto\">   \r\n                                <div className=\"card rounded-0\">\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Yearly precipitation</h5>\r\n                                        <div className=\"card-text\">\r\n                                            <Precipitation id=\"prcp\" data={this.state.response}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>         \r\n                            </div>\r\n                            <div className=\"col-xl-8 pt-30\">\r\n                                <TemperatureWrapper data={this.state.response}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        </Fragment> \r\n    ); \r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);","import React from 'react';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div id=\"loader-overlay\" className=\"loader-overlay z-3\">\r\n            <div id=\"loader\" className=\"loader\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport './index.css';\r\nimport Search from './Search.js';\r\nimport Dashboard from './Dashboard';\r\nimport Loader from './Loader';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact strict path=\"/Weather/(.*.{1,})\">\r\n          <Loader/>\r\n          <Dashboard city={decodeURIComponent(document.location.pathname.replace(\"/Weather/\",\"\").split(\"&\")[0])}/>\r\n        </Route>\r\n        <Route>\r\n          <Loader/>\r\n          <Search/>\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}